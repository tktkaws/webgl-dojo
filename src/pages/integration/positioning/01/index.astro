---
import Layout from '../../../../layouts/Layout.astro';
const title = "getBoundingClientRect";
---

<Layout title={title}>
  <h1 class="title">
    {title}
  </h1>
  <canvas id="canvas"></canvas>
</Layout>

<style>
  body {
    margin: 0;
}

#canvas {
    height: 100vh;
    width: 100vw;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
}
  .title {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 100;
    color: #000000;
    font-size: 20px;
    padding: 10px;
  }
</style>
<script>
    import { WebGLRenderer, Scene, PerspectiveCamera, PlaneGeometry, MeshBasicMaterial, Mesh } from "three";

    const world = {};

init();
function init() {
    const canvas = document.querySelector('#canvas');
    const canvasRect = canvas.getBoundingClientRect();

    world.renderer = new WebGLRenderer({
        canvas,
        antialias: true
    });
    world.renderer.setSize(canvasRect.width, canvasRect.height, false);
    world.renderer.setPixelRatio(window.devicePixelRatio);
    world.renderer.setClearColor(0x000000, 0);

    world.scene = new Scene();
    world.camera = new PerspectiveCamera(75, (canvasRect.width / canvasRect.height) , 0.1, 1000);
    world.camera.position.z = 5;


        // const rect = canvasRect;
        const geometry = new PlaneGeometry(1, 1);
        const material = new MeshBasicMaterial({ color: 0xff0000, transparent: true, opacity: .3 });
        const mesh = new Mesh(geometry, material);

    world.scene.add(mesh);
    animate();
    function animate() {
        requestAnimationFrame(animate);
        world.renderer.render(world.scene, world.camera);
    }
}

</script>
